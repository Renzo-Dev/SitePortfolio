import Lenis from 'lenis'

// Composable –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞ —á–µ—Ä–µ–∑ Lenis (–¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤)
export const useSmoothScroll = () => {
	let lenis: Lenis | null = null
	let rafId: number | null = null

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Lenis
	const init = () => {
		if (!import.meta.client) return

		// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Lenis –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
		lenis = new Lenis({
			duration: 1.2, // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ (1.2 = —Å—Ä–µ–¥–Ω—è—è –ø–ª–∞–≤–Ω–æ—Å—Ç—å)
			easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // easeOutExpo
			orientation: 'vertical', // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª
			gestureOrientation: 'vertical',
			smoothWheel: true, // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–æ–ª–µ—Å–∏–∫–æ–º –º—ã—à–∏
			wheelMultiplier: 1, // –ú–Ω–æ–∂–∏—Ç–µ–ª—å —Å–∫–æ—Ä–æ—Å—Ç–∏ –∫–æ–ª–µ—Å–∞ (1 = —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è)
			touchMultiplier: 2, // –ú–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è —Ç–∞—á-—É—Å—Ç—Ä–æ–π—Å—Ç–≤
			infinite: false, // –ù–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Å–∫—Ä–æ–ª–ª
		})

		// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–∏–∫–ª
		const raf = (time: number) => {
			lenis?.raf(time)
			rafId = requestAnimationFrame(raf)
		}

		rafId = requestAnimationFrame(raf)

		console.log('‚ú® Lenis smooth scroll initialized for all devices')
	}

	// –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
	const destroy = () => {
		if (rafId !== null) {
			cancelAnimationFrame(rafId)
			rafId = null
		}

		if (lenis) {
			lenis.destroy()
			lenis = null
			console.log('üóëÔ∏è Lenis smooth scroll destroyed')
		}
	}

	// –°–∫—Ä–æ–ª–ª –∫ —ç–ª–µ–º–µ–Ω—Ç—É
	const scrollTo = (
		target: string | number | HTMLElement,
		options?: Record<string, unknown>
	) => {
		if (!lenis) return

		lenis.scrollTo(target, {
			offset: 0,
			duration: 1.5,
			easing: (t: number) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
			...options,
		})
	}

	// –°–∫—Ä–æ–ª–ª –∫ —Å–µ–∫—Ü–∏–∏ –ø–æ ID
	const scrollToSection = (id: string, offset: number = -80) => {
		const element = document.getElementById(id)

		if (element && lenis) {
			// –ò—Å–ø–æ–ª—å–∑—É–µ–º Lenis –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞
			console.log('üéØ Lenis scroll to:', id, 'offset:', offset)
			lenis.scrollTo(element, {
				offset,
				duration: 1.5,
			})
		} else if (element && !lenis) {
			// Fallback –µ—Å–ª–∏ Lenis –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
			console.log('üì± Native scroll to:', id, 'offset:', offset)
			const elementPosition =
				element.getBoundingClientRect().top + window.scrollY
			window.scrollTo({
				top: elementPosition + offset,
				behavior: 'smooth',
			})
		} else {
			console.warn('‚ö†Ô∏è Element not found:', id)
		}
	}

	// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
	const stop = () => {
		lenis?.stop()
	}

	// –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞
	const start = () => {
		lenis?.start()
	}

	// Auto init/destroy –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
	onMounted(() => {
		init()
	})

	onUnmounted(() => {
		destroy()
	})

	return {
		lenis: computed(() => lenis),
		scrollTo,
		scrollToSection,
		stop,
		start,
		init,
		destroy,
	}
}
